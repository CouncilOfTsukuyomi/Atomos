name: Build and Release

on:
    push:
        branches:
            - main
            - develop
    workflow_dispatch:

jobs:
    version-update-and-build:
        runs-on: ubuntu-latest
        
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Install GitVersion
              run: dotnet tool install --global GitVersion.Tool

            - name: Run GitVersion
              id: gitversion
              run: gitversion /output json

            - name: Update Directory.Build.props
              run: |
                  VERSION=${{ steps.gitversion.outputs.FullSemVer }}
                  MAJOR=$(echo $VERSION | cut -d'.' -f1)
                  MINOR=$(echo $VERSION | cut -d'.' -f2)
                  PATCH=$(echo $VERSION | cut -d'.' -f3)
                  sed -i "s|<MajorVersion>.*</MajorVersion>|<MajorVersion>$MAJOR</MajorVersion>|" Directory.Build.props
                  sed -i "s|<MinorVersion>.*</MinorVersion>|<MinorVersion>$MINOR</MinorVersion>|" Directory.Build.props
                  sed -i "s|<PatchVersion>.*</PatchVersion>|<PatchVersion>$PATCH</PatchVersion>|" Directory.Build.props

            - name: Commit Updated Directory.Build.props
              run: |
                  git config --local user.name "GitHub Actions"
                  git config --local user.email "actions@github.com"
                  git add Directory.Build.props
                  git commit -m "chore: update version to ${{ steps.gitversion.outputs.FullSemVer }}"
                  git push
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Set Up .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 6.x

            - name: Restore Dependencies
              run: dotnet restore

            - name: Build Solution
              run: dotnet build --configuration Release
    
    create-release:
        runs-on: ubuntu-latest
        needs: version-update-and-build
        
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3

            - name: Install GitVersion
              run: dotnet tool install --global GitVersion.Tool

            - name: Run GitVersion
              id: gitversion
              run: gitversion /output json

            - name: Create GitHub Release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ steps.gitversion.outputs.FullSemVer }}
                  release_name: Release ${{ steps.gitversion.outputs.FullSemVer }}
                  body: |
                      ## Changelog
                      - Automatic version update to ${{ steps.gitversion.outputs.FullSemVer }}
                      - New features and fixes.
                  draft: false
                  prerelease: ${{ steps.gitversion.outputs.PreReleaseLabel != '' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
