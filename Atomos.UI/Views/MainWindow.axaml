<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="600"
        x:Class="Atomos.UI.Views.MainWindow"
        x:CompileBindings="True"
        x:DataType="vm:MainWindowViewModel"
        xmlns:vm="clr-namespace:Atomos.UI.ViewModels"
        xmlns:models="clr-namespace:Atomos.UI.Models"
        xmlns:views="clr-namespace:Atomos.UI.Views"
        Title="Mod Forwarder"
        MinWidth="800"
        MinHeight="600"
        TransparencyLevelHint="AcrylicBlur"
        Background="#262626"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        WindowStartupLocation="CenterScreen">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid RowDefinitions="30,*">
        <!-- Custom Title Bar -->
        <ExperimentalAcrylicBorder Grid.Row="0" Height="30" Material="{StaticResource TopBarAcrylicMaterial}">
            <Grid x:Name="TitleBar" Classes="titleBar">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="Atomos Mod Forwarder" 
                           VerticalAlignment="Center" 
                           Margin="10,0" 
                           Foreground="{DynamicResource TextBrush}" 
                           Classes="titleText"/>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <!-- Minimize Button -->
                    <Button Name="MinimizeButton" 
                            Classes="windowControl" 
                            HorizontalContentAlignment="Center" 
                            VerticalContentAlignment="Center">
                        <Path Width="10" Height="2" Stretch="None" Stroke="{DynamicResource TextBrush}" StrokeThickness="1">
                            <Path.Data>
                                <StreamGeometry>
                                    M 0,0 L 10,0
                                </StreamGeometry>
                            </Path.Data>
                        </Path>
                    </Button>

                    <!-- Close Button -->
                    <Button Name="CloseButton" 
                            Classes="windowControl" 
                            HorizontalContentAlignment="Center" 
                            VerticalContentAlignment="Center">
                        <Path Width="10" Height="10" Stretch="None" Stroke="{DynamicResource TextBrush}" StrokeThickness="1">
                            <Path.Data>
                                <StreamGeometry>
                                    M 0,0 L 10,10 M 0,10 L 10,0
                                </StreamGeometry>
                            </Path.Data>
                        </Path>
                    </Button>
                </StackPanel>
            </Grid>
        </ExperimentalAcrylicBorder>

        <!-- Main Content -->
        <Grid Grid.Row="1" ColumnDefinitions="250,*">
            <!-- Navigation Panel -->
            <ExperimentalAcrylicBorder Grid.Column="0" Material="{StaticResource NavigationAcrylicMaterial}">
                <Grid Classes="navPanel" RowDefinitions="Auto,*,Auto">
                    <!-- App Logo/Title -->
                    <StackPanel Grid.Row="0" Classes="appLogo">
                        <PathIcon Data="{StaticResource HomeIcon}" Classes="logoIcon"/>
                        <TextBlock Text="Atomos" Classes="logoText"/>
                    </StackPanel>

                    <!-- Navigation Items -->
                    <ListBox Grid.Row="1" 
                            Classes="navItems" 
                            ItemsSource="{Binding MenuItems}" 
                            SelectedItem="{Binding SelectedMenuItem}">
                        <ListBox.ItemTemplate>
                            <DataTemplate x:DataType="models:MenuItem">
                                <StackPanel Orientation="Horizontal" Spacing="15">
                                    <PathIcon Data="{Binding Icon}" Foreground="{DynamicResource TextBrush}"/>
                                    <TextBlock Text="{Binding Label}" 
                                             VerticalAlignment="Center" 
                                             Foreground="{DynamicResource TextBrush}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <!-- Settings Button -->
                    <Button Grid.Row="2" 
                            Margin="10,0,10,20" 
                            Command="{Binding NavigateToSettingsCommand}" 
                            Classes="transparent">
                        <StackPanel Orientation="Horizontal" Spacing="15">
                            <PathIcon Data="{StaticResource SettingsIcon}"/>
                            <TextBlock Text="Settings" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Button>
                </Grid>
            </ExperimentalAcrylicBorder>

            <!-- Content Area -->
            <ExperimentalAcrylicBorder Grid.Column="1" Material="{StaticResource ContentAcrylicMaterial}">
                <ContentControl Content="{Binding CurrentPage}" Margin="20"/>
            </ExperimentalAcrylicBorder>
        </Grid>

        <!-- Notification Overlay -->
        <ItemsControl Grid.Row="1" 
                     ItemsSource="{Binding Notifications}" 
                     Classes="notifications"/>
        
        <!-- Install View Overlay -->
        <views:InstallView DataContext="{Binding InstallViewModel}"
                           Grid.Row="0" Grid.RowSpan="2"/>
        
        <!-- Update View Overlay -->
        <views:UpdatePromptView DataContext="{Binding UpdatePromptViewModel}"
                           Grid.Row="0" Grid.RowSpan="2"/>
        
        <!-- Sentry Enable Overlay -->
        <views:SentryPromptView DataContext="{Binding SentryPromptViewModel}"
                                Grid.Row="0" Grid.RowSpan="2"/>

        <!-- Notification Hub View -->
        <views:NotificationHubView DataContext="{Binding NotificationHubViewModel}"
                                   Grid.Row="0" Grid.RowSpan="2"/>

        <!-- Plugin Settings Overlay -->
        <views:PluginSettingsView x:Name="PluginSettingsOverlay"
                                  DataContext="{Binding PluginSettingsViewModel}"
                                  IsVisible="{Binding #PluginSettingsOverlay.DataContext, Converter={x:Static ObjectConverters.IsNotNull}}"
                                  Grid.Row="0" Grid.RowSpan="2"/>
    </Grid>
</Window>